controller:
package mx.ulsa.Oliver_Ipsw.controller;

import mx.ulsa.Oliver_Ipsw.model.Usuario;
import mx.ulsa.Oliver_Ipsw.service.UsuarioService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import java.util.List;

@Controller
public class UsuarioController {

    @Autowired
    UsuarioService usuarioSer;

    @GetMapping("/addUsuario")
    public String addUser(@ModelAttribute("message") String message, Model model) {
        model.addAttribute("usuario", new Usuario());
        model.addAttribute("message", message);

        return "login/register";
    }

    @PostMapping("/saveUsuario")
    public String saveUsuario(Usuario usuario, RedirectAttributes redirectAttributes) {
        if (usuarioSer.saveOrUpdateUsuario(usuario)) {
            redirectAttributes.addFlashAttribute("message", "Registro exitoso");
            return "login/loginRegister";
        }

        redirectAttributes.addFlashAttribute("message", "Error al registrar");
        return "redirect:/addUsuario";
    }

    @PostMapping("/saveUsuario2")
    public String saveUsuario2(@ModelAttribute Usuario usuario, RedirectAttributes redirectAttributes) {
        if (usuarioSerz.saveOrUpdateUsuario(usuario)) {
            redirectAttributes.addFlashAttribute("message", "Registro exitoso");
        } else {
            redirectAttributes.addFlashAttribute("message", "Error al registrar");
        }
        return "redirect:/usuario/principal";
    }

    @GetMapping("/usuario/principal")
    public String getAllUsuarios(Model model) {
        List<Usuario> usuarios = usuarioSer.getAllUsuario();
        model.addAttribute("usuarios", usuarios);
        return "usuario/usuario";
    }

    @GetMapping("/eliminarUsuario/{id}")
    public String eliminarUsuario(@PathVariable Integer id, RedirectAttributes redirectAttributes) {
        usuarioSer.deleteUsuario(id);
        redirectAttributes.addFlashAttribute("message", "Usuario eliminado con éxito");
        return "redirect:/usuario/principal";
    }

    @GetMapping("/editarUsuario/{id}")
    public String editarUsuario(@PathVariable Integer id, Model model) {
        model.addAttribute("usuario", usuarioSer.getUsuarioById(id));

        return "usuario/editUser";
    }

    @PostMapping("/guardarCambiosUsuario")
    public String guardarCambiosUsuario(@ModelAttribute Usuario usuario, RedirectAttributes redirectAttributes) {
        if (usuarioSer.saveOrUpdateUsuario(usuario)) {
            redirectAttributes.addFlashAttribute("message", "Usuario actualizado correctamente");
        } else {
            redirectAttributes.addFlashAttribute("message", "Error al actualizar el usuario");
        }
        return "redirect:/usuario/principal";
    }



}
